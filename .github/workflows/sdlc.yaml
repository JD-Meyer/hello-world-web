# .github/workflows/sdlc.yaml
# Build, Lint, and deploy
name: Build, Lint, and Deploy

on:
  # Runs only when a push or pull request targets main
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Adding a workflow_dispatch call will allow me to run the workflow
  # manually from the Actions UI
  workflow_dispatch:

# Sets permissions on GITHUB_TOKEN
# to allow deployment to GH Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build and lint
  build:
    runs-on: ubuntu-latest
    steps:
      # It's best practice to use a more specific version of actions
      # to avoid unexpected breaking changes.
      - name: Checkout code
        uses: actions/checkout@v4                   # 1. Get the code to run

      - name: Set up node.js                        # 2. Set up the runtime environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Use npm's cache to speed up future builds
          cache: 'npm'

      - name: Install dependencies                  # 3. Install dependencies
        run: npm ci

      # Run the linter in this step
      - name: Run HTMLHint                          # Run the HTML linter
        run: npx htmlhint "**/*.html"

      # Now configure GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # now create the artifacts directory for th ebuild artifact
      - name: create new artifacts directory
        run: |
          mkdir build
          mv index.html build/

      # Now upload an artifact to GH Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Stick the artifact in the build directory
          path: './build'

  # Create a docker container
  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into GH Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker img
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ toLower(github.repository) }}:latest

  # Define a custom deployment step.
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    # requires success of the build job
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Download and list my artifact
  artifact:
    name: Verify Artifact
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: download-artifact
        uses: actions/download-artifact@v4
        with:
          # required for Pages artifacts
          name: github-pages
      - name: List artifact contents
        run: ls -R
